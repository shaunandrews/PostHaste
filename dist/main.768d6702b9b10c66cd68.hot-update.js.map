{"version":3,"file":"main.768d6702b9b10c66cd68.hot-update.js","mappings":"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","sources":["webpack://post-haste/./src/renderer/components/Editor/TextEditor.jsx","webpack://post-haste/webpack/runtime/getFullHash"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport { Button } from '../Interface/Button';\nimport { MediaImage } from 'iconoir-react';\nimport styles from './Editor.module.css';\n\nexport function TextEditor({ content, onChange, onImageSelect }) {\n  const editorRef = useRef(null);\n  const fileInputRef = useRef(null);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [imagePreview, setImagePreview] = useState(null);\n\n  useEffect(() => {\n    // Keep the editor content in sync with the content prop\n    if (editorRef.current && editorRef.current.textContent !== content) {\n      editorRef.current.textContent = content;\n    }\n  }, [content]);\n\n  const handleInput = (e) => {\n    const newContent = e.target.textContent;\n    onChange({ target: { value: newContent } });\n  };\n\n  const handlePaste = (e) => {\n    e.preventDefault();\n    const text = e.clipboardData.getData('text/plain');\n    document.execCommand('insertText', false, text);\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      document.execCommand('insertLineBreak');\n    }\n  };\n\n  const handleImageClick = () => {\n    if (selectedImage) {\n      // Remove the image\n      setSelectedImage(null);\n      setImagePreview(null);\n      onImageSelect?.(null);\n      // Reset the file input\n      if (fileInputRef.current) {\n        fileInputRef.current.value = '';\n      }\n    } else {\n      fileInputRef.current?.click();\n    }\n  };\n\n  const handleImageSelect = (e) => {\n    const file = e.target.files?.[0];\n    if (file) {\n      setSelectedImage(file);\n      // Create preview URL\n      const previewUrl = URL.createObjectURL(file);\n      setImagePreview(previewUrl);\n      onImageSelect?.(file);\n    }\n  };\n\n  // Cleanup preview URL when component unmounts or image changes\n  useEffect(() => {\n    return () => {\n      if (imagePreview) {\n        URL.revokeObjectURL(imagePreview);\n      }\n    };\n  }, [imagePreview]);\n\n  return (\n    <div className={styles.editor}>\n      <div\n        ref={editorRef}\n        className={styles.canvas}\n        contentEditable\n        onInput={handleInput}\n        onPaste={handlePaste}\n        onKeyDown={handleKeyDown}\n        role=\"textbox\"\n        aria-multiline=\"true\"\n        aria-label=\"Post content\"\n        data-placeholder=\"What's on your mind?\"\n      />\n\n      <div className={styles.tools}>\n        <input\n          type=\"file\"\n          ref={fileInputRef}\n          onChange={handleImageSelect}\n          accept=\"image/jpeg,image/png,image/gif,image/webp\"\n          style={{ display: 'none' }}\n        />\n        {imagePreview ? (\n          <div className={styles.imagePreview} onClick={handleImageClick} role=\"button\" aria-label=\"Remove image\">\n            <img src={imagePreview} alt=\"Selected\" />\n          </div>\n        ) : (\n          <Button \n            variant=\"default\" \n            onClick={handleImageClick}\n            icon={MediaImage}\n          >\n            Select image\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n} ","__webpack_require__.h = () => (\"a0dceff7cee21d8a9d82\")"],"names":["React","useRef","useEffect","useState","Button","MediaImage","styles","TextEditor","_ref","content","onChange","onImageSelect","editorRef","fileInputRef","_useState","_useState2","_slicedToArray","selectedImage","setSelectedImage","_useState3","_useState4","imagePreview","setImagePreview","current","textContent","handleInput","e","newContent","target","value","handlePaste","preventDefault","text","clipboardData","getData","document","execCommand","handleKeyDown","key","shiftKey","handleImageClick","_fileInputRef$current","click","handleImageSelect","_e$target$files","file","files","previewUrl","URL","createObjectURL","revokeObjectURL","createElement","className","editor","ref","canvas","contentEditable","onInput","onPaste","onKeyDown","role","tools","type","accept","style","display","onClick","src","alt","variant","icon"],"sourceRoot":""}
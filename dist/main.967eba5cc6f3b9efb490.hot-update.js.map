{"version":3,"file":"main.967eba5cc6f3b9efb490.hot-update.js","mappings":"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","sources":["webpack://post-haste/./src/renderer/components/Editor/TextEditor.jsx","webpack://post-haste/webpack/runtime/getFullHash"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport { Button } from '../Interface/Button';\nimport { Input } from '../Interface/Input';\nimport { MediaImage } from 'iconoir-react';\nimport styles from './Editor.module.css';\n\nconst Store = window.require('electron-store');\nconst store = new Store();\n\nexport function TextEditor({ content, onChange, onImageSelect }) {\n  const editorRef = useRef(null);\n  const fileInputRef = useRef(null);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [imagePreview, setImagePreview] = useState(null);\n  const [title, setTitle] = useState('');\n  const showTitle = store.get('showTitle', false);\n\n  useEffect(() => {\n    // Keep the editor content in sync with the content prop\n    if (editorRef.current && editorRef.current.textContent !== content) {\n      editorRef.current.textContent = content;\n    }\n  }, [content]);\n\n  const handleInput = (e) => {\n    const newContent = e.target.textContent;\n    onChange({ \n      target: { \n        value: newContent,\n        title: title \n      } \n    });\n  };\n\n  const handleTitleChange = (e) => {\n    const newTitle = e.target.value;\n    setTitle(newTitle);\n    onChange({ \n      target: { \n        value: editorRef.current?.textContent || '',\n        title: newTitle \n      } \n    });\n  };\n\n  const handlePaste = (e) => {\n    e.preventDefault();\n    const text = e.clipboardData.getData('text/plain');\n    document.execCommand('insertText', false, text);\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      document.execCommand('insertLineBreak');\n    }\n  };\n\n  const handleImageClick = () => {\n    if (selectedImage) {\n      // Remove the image\n      setSelectedImage(null);\n      setImagePreview(null);\n      onImageSelect?.(null);\n      // Reset the file input\n      if (fileInputRef.current) {\n        fileInputRef.current.value = '';\n      }\n    } else {\n      fileInputRef.current?.click();\n    }\n  };\n\n  const handleImageSelect = (e) => {\n    const file = e.target.files?.[0];\n    if (file) {\n      setSelectedImage(file);\n      // Create preview URL\n      const previewUrl = URL.createObjectURL(file);\n      setImagePreview(previewUrl);\n      onImageSelect?.(file);\n    }\n  };\n\n  // Cleanup preview URL when component unmounts or image changes\n  useEffect(() => {\n    return () => {\n      if (imagePreview) {\n        URL.revokeObjectURL(imagePreview);\n      }\n    };\n  }, [imagePreview]);\n\n  return (\n    <div className={styles.editor}>\n      {showTitle && (\n        <Input\n          type=\"text\"\n          value={title}\n          onChange={handleTitleChange}\n          placeholder=\"Post title\"\n          className={styles.titleInput}\n        />\n      )}\n      <div\n        ref={editorRef}\n        className={styles.canvas}\n        contentEditable\n        onInput={handleInput}\n        onPaste={handlePaste}\n        onKeyDown={handleKeyDown}\n        role=\"textbox\"\n        aria-multiline=\"true\"\n        aria-label=\"Post content\"\n        data-placeholder=\"What's on your mind?\"\n      />\n\n      <div className={styles.tools}>\n        <input\n          type=\"file\"\n          ref={fileInputRef}\n          onChange={handleImageSelect}\n          accept=\"image/jpeg,image/png,image/gif,image/webp\"\n          style={{ display: 'none' }}\n        />\n        {imagePreview ? (\n          <div className={styles.imagePreview} onClick={handleImageClick} role=\"button\" aria-label=\"Remove image\">\n            <img src={imagePreview} alt=\"Selected\" />\n          </div>\n        ) : (\n          <Button \n            variant=\"default\" \n            onClick={handleImageClick}\n            icon={MediaImage}\n          >\n            Select image\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n} ","__webpack_require__.h = () => (\"65f9e4a3d48f78027d07\")"],"names":["React","useRef","useEffect","useState","Button","Input","MediaImage","styles","Store","window","require","store","TextEditor","_ref","content","onChange","onImageSelect","editorRef","fileInputRef","_useState","_useState2","_slicedToArray","selectedImage","setSelectedImage","_useState3","_useState4","imagePreview","setImagePreview","_useState5","_useState6","title","setTitle","showTitle","get","current","textContent","handleInput","e","newContent","target","value","handleTitleChange","_editorRef$current","newTitle","handlePaste","preventDefault","text","clipboardData","getData","document","execCommand","handleKeyDown","key","shiftKey","handleImageClick","_fileInputRef$current","click","handleImageSelect","_e$target$files","file","files","previewUrl","URL","createObjectURL","revokeObjectURL","createElement","className","editor","type","placeholder","titleInput","ref","canvas","contentEditable","onInput","onPaste","onKeyDown","role","tools","accept","style","display","onClick","src","alt","variant","icon"],"sourceRoot":""}
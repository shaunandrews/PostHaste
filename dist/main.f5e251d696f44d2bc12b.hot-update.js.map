{"version":3,"file":"main.f5e251d696f44d2bc12b.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;AAA0B;AACiB;AACR;AACa;AACF;AAEvC,SAASK,WAAWA,CAAAC,IAAA,EAAgE;EAAA,IAA7DC,aAAa,GAAAD,IAAA,CAAbC,aAAa;IAAEC,aAAa,GAAAF,IAAA,CAAbE,aAAa;IAAEC,aAAa,GAAAH,IAAA,CAAbG,aAAa;IAAEC,YAAY,GAAAJ,IAAA,CAAZI,YAAY;EACrF,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAA,EAAS;IAC7B,IAAIJ,aAAa,EAAE;MACjBE,aAAa,CAAC,CAAC;MACf;MACA,IAAIC,YAAY,CAACE,OAAO,EAAE;QACxBF,YAAY,CAACE,OAAO,CAACC,KAAK,GAAG,EAAE;MACjC;IACF,CAAC,MAAM;MAAA,IAAAC,qBAAA;MACL,CAAAA,qBAAA,GAAAJ,YAAY,CAACE,OAAO,cAAAE,qBAAA,eAApBA,qBAAA,CAAsBC,KAAK,CAAC,CAAC;IAC/B;EACF,CAAC;EAED,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIC,CAAC,EAAK;IAAA,IAAAC,eAAA;IAC/B,IAAMC,IAAI,IAAAD,eAAA,GAAGD,CAAC,CAACG,MAAM,CAACC,KAAK,cAAAH,eAAA,uBAAdA,eAAA,CAAiB,CAAC,CAAC;IAChC,IAAIC,IAAI,EAAE;MACRX,aAAa,CAACW,IAAI,CAAC;IACrB;EACF,CAAC;EAED,oBACEnB,0DAAA,CAAAA,uDAAA,qBACEA,0DAAA;IACEwB,IAAI,EAAC,MAAM;IACXC,GAAG,EAAEf,YAAa;IAClBgB,QAAQ,EAAEV,iBAAkB;IAC5BW,MAAM,EAAC,2CAA2C;IAClDC,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO;EAAE,CAC5B,CAAC,EACDtB,aAAa,gBACZP,0DAAA,CAACG,yDAAa;IAAC2B,KAAK,EAAEvB,aAAc;IAACwB,OAAO,EAAEpB;EAAiB,CAAE,CAAC,gBAElEX,0DAAA,CAACE,2CAAM;IACL8B,OAAO,EAAC,SAAS;IACjBD,OAAO,EAAEpB,gBAAiB;IAC1BsB,IAAI,EAAEhC,qDAAUA;EAAC,GAClB,cAEO,CAEV,CAAC;AAEP;;;;;;;;UChDA","sources":["webpack://post-haste/./src/renderer/components/Interface/ImagePicker/index.jsx","webpack://post-haste/webpack/runtime/getFullHash"],"sourcesContent":["import React from 'react';\nimport { MediaImage } from 'iconoir-react';\nimport { Button } from '../Button';\nimport { SelectedImage } from './SelectedImage';\nimport styles from './ImagePicker.module.css';\n\nexport function ImagePicker({ selectedImage, onImageSelect, onImageRemove, fileInputRef }) {\n  const handleImageClick = () => {\n    if (selectedImage) {\n      onImageRemove();\n      // Reset the file input value so the same file can be selected again\n      if (fileInputRef.current) {\n        fileInputRef.current.value = '';\n      }\n    } else {\n      fileInputRef.current?.click();\n    }\n  };\n\n  const handleImageSelect = (e) => {\n    const file = e.target.files?.[0];\n    if (file) {\n      onImageSelect(file);\n    }\n  };\n\n  return (\n    <>\n      <input\n        type=\"file\"\n        ref={fileInputRef}\n        onChange={handleImageSelect}\n        accept=\"image/jpeg,image/png,image/gif,image/webp\"\n        style={{ display: 'none' }}\n      />\n      {selectedImage ? (\n        <SelectedImage image={selectedImage} onClick={handleImageClick} />\n      ) : (\n        <Button \n          variant=\"default\" \n          onClick={handleImageClick}\n          icon={MediaImage}\n        >\n          Select image\n        </Button>\n      )}\n    </>\n  );\n} ","__webpack_require__.h = () => (\"1ab7c26ab14611d48bec\")"],"names":["React","MediaImage","Button","SelectedImage","styles","ImagePicker","_ref","selectedImage","onImageSelect","onImageRemove","fileInputRef","handleImageClick","current","value","_fileInputRef$current","click","handleImageSelect","e","_e$target$files","file","target","files","createElement","Fragment","type","ref","onChange","accept","style","display","image","onClick","variant","icon"],"sourceRoot":""}
{"version":3,"file":"main.1980f635ebc6615f8d64.hot-update.js","mappings":"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","sources":["webpack://post-haste/./src/renderer/components/Editor/TextEditor.jsx","webpack://post-haste/webpack/runtime/getFullHash"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport { Button } from '../Interface/Button';\nimport { MediaImage } from 'iconoir-react';\nimport styles from './Editor.module.css';\n\nexport function TextEditor({ content, title, showTitleField, onChange, onTitleChange, onImageSelect }) {\n  const editorRef = useRef(null);\n  const titleRef = useRef(null);\n  const fileInputRef = useRef(null);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [imagePreview, setImagePreview] = useState(null);\n\n  useEffect(() => {\n    // Keep the editor content in sync with the content prop\n    if (editorRef.current && editorRef.current.textContent !== content) {\n      editorRef.current.textContent = content;\n    }\n    // Keep the title in sync with the title prop\n    if (titleRef.current && titleRef.current.textContent !== title) {\n      titleRef.current.textContent = title;\n    }\n  }, [content, title]);\n\n  const handleInput = (e) => {\n    const newContent = e.target.textContent;\n    onChange({ target: { value: newContent } });\n  };\n\n  const handleTitleInput = (e) => {\n    const newTitle = e.target.textContent;\n    onTitleChange({ target: { value: newTitle } });\n  };\n\n  const handlePaste = (e) => {\n    e.preventDefault();\n    const text = e.clipboardData.getData('text/plain');\n    document.execCommand('insertText', false, text);\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      document.execCommand('insertLineBreak');\n    }\n  };\n\n  const handleImageClick = () => {\n    if (selectedImage) {\n      // Remove the image\n      setSelectedImage(null);\n      setImagePreview(null);\n      onImageSelect?.(null);\n      // Reset the file input\n      if (fileInputRef.current) {\n        fileInputRef.current.value = '';\n      }\n    } else {\n      fileInputRef.current?.click();\n    }\n  };\n\n  const handleImageSelect = (e) => {\n    const file = e.target.files?.[0];\n    if (file) {\n      setSelectedImage(file);\n      // Create preview URL\n      const previewUrl = URL.createObjectURL(file);\n      setImagePreview(previewUrl);\n      onImageSelect?.(file);\n    }\n  };\n\n  // Cleanup preview URL when component unmounts or image changes\n  useEffect(() => {\n    return () => {\n      if (imagePreview) {\n        URL.revokeObjectURL(imagePreview);\n      }\n    };\n  }, [imagePreview]);\n\n  return (\n    <div className={styles.editor}>\n      {showTitleField && (\n        <div\n          ref={titleRef}\n          className={styles.titleField}\n          contentEditable\n          onInput={handleTitleInput}\n          onPaste={handlePaste}\n          role=\"textbox\"\n          aria-label=\"Post title\"\n          data-placeholder=\"Post title\"\n        />\n      )}\n      <div\n        ref={editorRef}\n        className={styles.canvas}\n        contentEditable\n        onInput={handleInput}\n        onPaste={handlePaste}\n        onKeyDown={handleKeyDown}\n        role=\"textbox\"\n        aria-multiline=\"true\"\n        aria-label=\"Post content\"\n        data-placeholder=\"What's on your mind?\"\n      />\n\n      <div className={styles.tools}>\n        <input\n          type=\"file\"\n          ref={fileInputRef}\n          onChange={handleImageSelect}\n          accept=\"image/jpeg,image/png,image/gif,image/webp\"\n          style={{ display: 'none' }}\n        />\n        {imagePreview ? (\n          <div className={styles.imagePreview} onClick={handleImageClick} role=\"button\" aria-label=\"Remove image\">\n            <img src={imagePreview} alt=\"Selected\" />\n          </div>\n        ) : (\n          <Button \n            variant=\"default\" \n            onClick={handleImageClick}\n            icon={MediaImage}\n          >\n            Select image\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n} ","__webpack_require__.h = () => (\"33d40f9944e72b7b02da\")"],"names":["React","useRef","useEffect","useState","Button","MediaImage","styles","TextEditor","_ref","content","title","showTitleField","onChange","onTitleChange","onImageSelect","editorRef","titleRef","fileInputRef","_useState","_useState2","_slicedToArray","selectedImage","setSelectedImage","_useState3","_useState4","imagePreview","setImagePreview","current","textContent","handleInput","e","newContent","target","value","handleTitleInput","newTitle","handlePaste","preventDefault","text","clipboardData","getData","document","execCommand","handleKeyDown","key","shiftKey","handleImageClick","_fileInputRef$current","click","handleImageSelect","_e$target$files","file","files","previewUrl","URL","createObjectURL","revokeObjectURL","createElement","className","editor","ref","titleField","contentEditable","onInput","onPaste","role","canvas","onKeyDown","tools","type","accept","style","display","onClick","src","alt","variant","icon"],"sourceRoot":""}